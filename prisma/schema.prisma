generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Movie {
  movieId     String    @id @default(cuid())
  title       String
  description String
  genres      Genre[]
  tags        Tag[]
  info        MetaInfo? @relation(fields: [infoId], references: [mid])
  infoId      String?   @unique
  length      Int?
  released    DateTime?
  available   DateTime?

  created  DateTime  @default(now())
  updated  DateTime  @updatedAt
  profiles Profile[]
}

model MetaInfo {
  mid         String   @id @default(cuid())
  title       String
  description String
  poster      Poster[]
  created     DateTime @default(now())
  updated     DateTime @updatedAt
  movie       Movie?
}

model Genre {
  gid      String    @id @default(cuid())
  name     String    @unique
  info     String
  created  DateTime  @default(now())
  updated  DateTime  @updatedAt
  movies   Movie[]
  profiles Profile[]
}

model Tag {
  tid     String   @id @default(cuid())
  name    String   @unique
  created DateTime @default(now())
  updated DateTime @updatedAt
  movies  Movie[]
}

model Poster {
  pid        String    @id @default(cuid())
  imgUrl     String
  metaInfo   MetaInfo? @relation(fields: [metaInfoId], references: [mid])
  metaInfoId String?
}

model User {
  uid       String   @id @default(uuid())
  email     String   @unique
  created   DateTime @default(now())
  updated   DateTime @updatedAt
  profile   Profile? @relation(fields: [profileId], references: [pid])
  profileId String?  @unique
}

model Profile {
  pid         String   @id @default(cuid())
  phone       String
  firstname   String
  lastname    String
  lovedMovies Movie[]
  lovedGenres Genre[]
  usrTheme    Theme    @relation(fields: [themeId], references: [thid])
  themeId     String
  created     DateTime @default(now())
  updated     DateTime @updatedAt
  User        User?
}

model Theme {
  thid       String    @id @default(cuid())
  themeName  String    @unique
  themeColor String
  created    DateTime  @default(now())
  updated    DateTime  @updatedAt
  profiles   Profile[]
}
